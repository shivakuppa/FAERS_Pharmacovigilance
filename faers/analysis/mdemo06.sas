/* *************************************************************************
* PROGRAM : mdemo.sas
* PROGRAMMER : Lajeeth Thangavel
* VALIDATOR : Shiva
* DATE : 4/2/25
* PURPOSE : 
* SOURCE : C:\dev\faers\data\raw\2006
* TARGET : C:\dev\faers\analysis


* MODIFYING HISTORY : 
****************************************************************************
DATE :                   NAME :                      REASON FOR MODIFICATION: 
****************************************************************************
*/ 

PROC PRINTTO LOG="C:\dev\faers\log\mdemo.log" NEW;
RUN;

/*To get group totals to replicate rows to count the derived age group*/
DATA Dem1;
	set Afinal06.Demo06q1;
	/*Assigning new variables for derived age and age group*/
	AGEGRP=D_AGE;
	AGEGRPC=D_AGEGRP;
	OUTPUT;

	/*Assigning a new variable for total*/
	AGEGRP=1000;
	AGEGRPC="Total";
	OUTPUT;

	/*Subset missing values from dataset*/
	Where D_AGE NE .;
RUN;

/*Calculation of big N count derivation (Column header N=XX)*/
PROC SQL;

	SELECT COUNT (DISTINCT ISR) INTO: AGEGRP1 FROM Dem1 WHERE AGEGRPC="GROUP 1";
	SELECT COUNT (DISTINCT ISR) INTO: AGEGRP2 FROM Dem1 WHERE AGEGRPC="GROUP 2";
	SELECT COUNT (DISTINCT ISR) INTO: AGEGRP3 FROM Dem1 WHERE AGEGRPC="GROUP 3";
	SELECT COUNT (DISTINCT ISR) INTO: AGEGRP4 FROM Dem1 WHERE AGEGRPC="GROUP 4";
	SELECT COUNT (DISTINCT ISR) INTO: AGEGRP5 FROM Dem1 WHERE AGEGRPC="Total";
	
/*	%PUT &AGEGRP1 &AGEGRP2 &AGEGRP3 &AGEGRP4 &AGEGRP5;*/

QUIT;

/*Calculate gender count and percent (GNDR_COD Sex)*/
PROC FREQ Data=Dem1;

	TABLES GNDR_COD*AGEGRPC /OUT=GENDER (DROP=PERCENT);
	TABLES REPT_COD*AGEGRPC /OUT=REPORT (DROP=PERCENT);
	TABLES OCCP_COD*AGEGRPC /OUT=OCCP (DROP=PERCENT);

RUN;

/*Calculate percent for count*/
data GENDER1;
	set Gender;

	IF AGEGRPC="GROUP 1" THEN DENOM=&AGEGRP1;
	IF AGEGRPC="GROUP 2" THEN DENOM=&AGEGRP2;
	IF AGEGRPC="GROUP 3" THEN DENOM=&AGEGRP3;
	IF AGEGRPC="GROUP 4" THEN DENOM=&AGEGRP4;
	IF AGEGRPC="Total" THEN DENOM=&AGEGRP5;

	PERCENT=PUT((COUNT/DENOM)*100,7.1);
	COUNTPER=COUNT || " (" || STRIP(PERCENT) || ")";
	WHERE GNDR_COD NE "" AND AGEGRPC NE "";
	DROP COUNT DENOM PERCENT;
run;

data REPORT1;
	set REPORT;

	IF AGEGRPC="GROUP 1" THEN DENOM=&AGEGRP1;
	IF AGEGRPC="GROUP 2" THEN DENOM=&AGEGRP2;
	IF AGEGRPC="GROUP 3" THEN DENOM=&AGEGRP3;
	IF AGEGRPC="GROUP 4" THEN DENOM=&AGEGRP4;
	IF AGEGRPC="Total" THEN DENOM=&AGEGRP5;

	PERCENT=PUT((COUNT/DENOM)*100,7.1);
	COUNTPER=COUNT || " (" || STRIP(PERCENT) || ")";
	WHERE REPT_COD NE "" AND AGEGRPC NE "";
	DROP COUNT DENOM PERCENT;
run;

data OCCP1;
	set OCCP;

	IF AGEGRPC="GROUP 1" THEN DENOM=&AGEGRP1;
	IF AGEGRPC="GROUP 2" THEN DENOM=&AGEGRP2;
	IF AGEGRPC="GROUP 3" THEN DENOM=&AGEGRP3;
	IF AGEGRPC="GROUP 4" THEN DENOM=&AGEGRP4;
	IF AGEGRPC="Total" THEN DENOM=&AGEGRP5;

	PERCENT=PUT((COUNT/DENOM)*100,7.1);
	COUNTPER=COUNT || " (" || STRIP(PERCENT) || ")";
	WHERE OCCP_COD NE "" AND AGEGRPC NE "";
	DROP COUNT DENOM PERCENT;
run;

/*Restructure dataset such that age ageoups and their totals appears as columns and gender code as roles*/
PROC SORT Data=GENDER1 Out=Gender2;
	BY GNDR_COD;
RUN;

PROC SORT Data=REPORT1 Out=REPORT2;
	BY REPT_COD;
RUN;

PROC SORT Data=OCCP1 Out=OCCP2;
	BY OCCP_COD;
RUN;

PROC TRANSPOSE Data=Gender2 Out=Gender3 (DROP=_NAME_);
	BY GNDR_COD;
	ID AGEGRPC;
	VAR COUNTPER;
RUN;

PROC TRANSPOSE Data=REPORT2 Out=REPORT3 (DROP=_NAME_);
	BY REPT_COD;
	ID AGEGRPC;
	VAR COUNTPER;
RUN;

PROC TRANSPOSE Data=OCCP2 Out=OCCP3 (DROP=_NAME_);
	BY OCCP_COD;
	ID AGEGRPC;
	VAR COUNTPER;
RUN;

/*Create order variable to print order of gender code as per mockshell*/
PROC SQL;
	CREATE TABLE Gender4 AS
	SELECT *,"GNDR_COD (Gender)" AS CAT
	FROM Gender3
	ORDER BY
	CASE
	WHEN GNDR_COD = 'M' THEN 1
	WHEN GNDR_COD = 'F' THEN 2
	WHEN GNDR_COD = 'NS' THEN 3
	WHEN GNDR_COD = 'UNK' THEN 4
	ELSE 0
	END;

	CREATE TABLE REPORT4 AS
	SELECT *,"REPT_COD (Report)" AS CAT
	FROM REPORT3
	ORDER BY
	CASE
	WHEN REPT_COD = 'EXP' THEN 1
	WHEN REPT_COD = 'PER' THEN 2
	WHEN REPT_COD = 'DIR' THEN 3
	ELSE 0
	END;

	CREATE TABLE OCCP4 AS
	SELECT *,"OCCP_COD (Occupation)" AS CAT
	FROM OCCP3
	ORDER BY
	CASE
	WHEN OCCP_COD = 'MD' THEN 1
	WHEN OCCP_COD = 'PH' THEN 2
	WHEN OCCP_COD = 'OT' THEN 3
	WHEN OCCP_COD = 'LW' THEN 4
	WHEN OCCP_COD = 'CN' THEN 5
	ELSE 0
	END;
QUIT;

/*Calculating Age Statistics*/
PROC MEANS Data=Dem1;
	CLASS AGEGRPC;
	VAR D_AGE;
	OUTPUT OUT= ASTATS (DROP=_TYPE_ _FREQ_) 
	N=_N
	MEAN=_MEAN
	STD=_STD
	MEDIAN=_MEDIAN
	MIN=_MIN
	MAX=_MAX;
RUN;

PROC MEANS Data=Dem1;
	CLASS AGEGRPC;
	VAR D_WT;
	OUTPUT OUT= WSTATS (DROP=_TYPE_ _FREQ_) 
	N=_N
	MEAN=_MEAN
	STD=_STD
	MEDIAN=_MEDIAN
	MIN=_MIN
	MAX=_MAX;
RUN;

DATA ASTATS1;
	LENGTH N MEAN MEDIAN GM MIN MAX STD RANGE $40.;
	set ASTATS;
	N=COMPRESS(PUT(_N,5.));
	MEAN=COMPRESS(PUT(_MEAN,5.2));
	MEDIAN=COMPRESS(PUT(_MEDIAN,5.2));
	GM=COMPRESS(PUT(GEOMEAN(_MEAN),5.2));
	MIN=COMPRESS(PUT(_MIN,5.2));
	MAX=COMPRESS(PUT(_MAX,5.2));
	STD=COMPRESS(PUT(_STD,5.2));
	RANGE=COMPRESS(CATX("-",_MIN,_MAX));

	IF AGEGRPC NE "";
	DROP _N _MEAN _MEDIAN _GM _MIN _MAX _STD _RANGE;
RUN;

DATA WSTATS1;
	LENGTH N MEAN MEDIAN GM MIN MAX STD RANGE $40.;
	set WSTATS;
	N=COMPRESS(PUT(_N,5.));
	MEAN=COMPRESS(PUT(_MEAN,5.2));
	MEDIAN=COMPRESS(PUT(_MEDIAN,5.2));
	GM=COMPRESS(PUT(GEOMEAN(_MEAN),5.2));
	MIN=COMPRESS(PUT(_MIN,5.2));
	MAX=COMPRESS(PUT(_MAX,5.2));
	STD=COMPRESS(PUT(_STD,5.2));
	RANGE=COMPRESS(CATX("-",_MIN,_MAX));

	IF AGEGRPC NE "";
	DROP _N _MEAN _MEDIAN _GM _MIN _MAX _STD _RANGE;
RUN;

/*Restructure dataset such that age ageoups and their totals appears as columns and age as roles*/
PROC SORT Data=ASTATS1 Out=ASTATS2;
	BY AGEGRPC;
RUN;

PROC SORT Data=WSTATS1 Out=WSTATS2;
	BY AGEGRPC;
RUN;

PROC TRANSPOSE Data=ASTATS2 Out=ASTATS3 (DROP=_LABEL_);
	ID AGEGRPC;
	VAR N MEAN MEDIAN GM MIN MAX STD RANGE;
RUN;

PROC TRANSPOSE Data=WSTATS2 Out=WSTATS3 (DROP=_LABEL_);
	ID AGEGRPC;
	VAR N MEAN MEDIAN GM MIN MAX STD RANGE;
RUN;

PROC SQL;
	CREATE TABLE ASTATS4 AS
	SELECT *,"D_AGE (Years)" AS CAT
	FROM ASTATS3
	ORDER BY
	CASE
	WHEN _NAME_ = 'N' THEN 1
	WHEN _NAME_ = 'MEAN' THEN 2
	WHEN _NAME_ = 'MEDIAN' THEN 3
	WHEN _NAME_ = 'GM' THEN 4
	WHEN _NAME_ = 'MIN' THEN 5
	WHEN _NAME_ = 'MAX' THEN 6
	WHEN _NAME_ = 'RANGE' THEN 7
	WHEN _NAME_ = 'STD' THEN 8
	ELSE 0
	END;

	CREATE TABLE WSTATS4 AS
	SELECT *,"D_WT (Kilograms)" AS CAT
	FROM WSTATS3
	ORDER BY
	CASE
	WHEN _NAME_ = 'N' THEN 1
	WHEN _NAME_ = 'MEAN' THEN 2
	WHEN _NAME_ = 'MEDIAN' THEN 3
	WHEN _NAME_ = 'GM' THEN 4
	WHEN _NAME_ = 'MIN' THEN 5
	WHEN _NAME_ = 'MAX' THEN 6
	WHEN _NAME_ = 'RANGE' THEN 7
	WHEN _NAME_ = 'STD' THEN 8
	ELSE 0
	END;
QUIT;

/*Combine all raw datasets into one*/
DATA Final;
	set Gender4(RENAME=(GNDR_COD=STAT)) REPORT4(RENAME=(REPT_COD=STAT))
	OCCP4(RENAME=(OCCP_COD=STAT)) ASTATS4(RENAME=(_NAME_=STAT))
	WSTATS4(RENAME=(_NAME_=STAT));
	IF CAT="GNDR_COD (Gender)" THEN ORDER=1;
	IF CAT="REPT_COD (Report)" THEN ORDER=2;
	IF CAT="OCCP_COD (Occupation)" THEN ORDER=3;
	IF CAT="D_AGE (Years)" THEN ORDER=4;
	IF CAT="D_WT (Kilograms)" THEN ORDER=4;
RUN;

PROC PRINTTO;
RUN;
